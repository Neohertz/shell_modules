# Arguments

# Formatting
NL=$'\n'
NC='\033[0m'

# Colors
YELLOW='\033[0;33m'
GREEN='\033[1;32m'
CYAN='\033[0;36m'
RED='\033[1;31m'
GRAY='\033[0;37m'

HelpMsg="Use ${GREEN}new -h${NC} to view usage."

function Help() {
	echo "Project Generator"
	echo "${GRAY}By Neohertz0"
	echo ""
	echo "${RED}USAGE:${NC}"
	echo "  ${GRAY}new ${CYAN}[options] ${YELLOW}<type>"
	echo ""
	echo "${RED}OPTIONS:${NC}"
	echo "  ${YELLOW}-h  --help${NC}   -> Show help."
	echo "  ${YELLOW}-c  --code${NC}   -> Run `code -r` on directory once created."
	echo ""
	echo "${RED}TYPES:"
	echo "  ${YELLOW}rojo${NC} -> Create a new project with rojo, wally and git."
}

function Error() {
	echo "${RED}[Error]${NC} $1"
}

function Log() {
	echo "${YELLOW}[Log]${NC} $1"
}

if [[ $# -eq 0 ]] ; then
	Error 'Incorrect Usage.'
	echo $HelpMsg
	exit 1
fi

OpenWithCode=false

# Register Options
while [ true ]; do 
	if [ "$1" = '-h' -o "$1" = '--help' ] ; then
		Help
		exit 1
		#shift 1
	elif [ "$1" = '-c' -o "$1" = '--code' ] ; then
		OpenWithCode=true
		shift 1
	else
		break
	fi
done

[[ -z "$1" ]] && Error 'No Argument Given.' && echo $HelpMsg && exit 1

if [[ $1 == 'rojo' ]] ; then
	echo "${NL}${GREEN}Create a new Rojo Project"
	read -p "$(echo "${GRAY}Project Name:${NC} ")" ProjectName

	# Check to see if the input is empty.
	[[ -z "$ProjectName" ]] && Error 'Please specify a project name.' && exit 1

	# Check for spaces.
	[[ $ProjectName = *" "* ]] && Error 'Project name cannot contain spaces.' && exit 1

	read -p "$(echo "${GRAY}Location:${NC} ")" Location
	New="$Location/$ProjectName"
	
	# Ensure that location is a directory
	[[ ! -d $Location ]] && Error "'$Location' is not a directory." && exit 1 

	# Ensure that directory doesn't already exist
	[[ -d $New ]] && Error 'Project Already Exists.' && exit 1

	read -p "$(echo "${NL}${YELLOW}Create new project? (y/n) ${NC}")" Confirm	

	# Ensure the result is y
	[[ ! $Confirm == 'y' ]] && Error 'Process Aborted.' && exit 1 

	# Create new Project, Initialize Rojo & Wally
	echo ''
	Log "Creating Directory..."
	mkdir -p "$New" && cd "$New"
	Log 'Initializing Rojo & Wally...'
	rojo init > /dev/null
	wally init > /dev/null
	Log 'Initializing Git Repository...'
	git init > /dev/null
	Log 'Creating selene.toml & sourcemap.json'
	echo "std = 'roblox'" > selene.toml
	rojo sourcemap > sourcemap.json

	if $OpenWithCode ; then
		Log 'Opening with Visual Studio Code...'
		code -n .
	else 
		echo "${GREEN}Project Created! Use 'cd ${New}' to view.${NL}"
	fi
elif [[ $1 == 'help' ]] ; then
	Help
else
	Error "$1 is not a valid Type."
	echo $HelpMsg

fi


